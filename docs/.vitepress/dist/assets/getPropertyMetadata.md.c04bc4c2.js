import{_ as a,c as s,o as e,a as t}from"./app.eafd5cec.js";const F=JSON.parse('{"title":"getPropertyMetadata","description":"","frontmatter":{},"headers":[{"level":2,"title":"property","slug":"property"}],"relativePath":"getPropertyMetadata.md"}'),n={name:"getPropertyMetadata.md"},p=t(`<h1 id="getpropertymetadata" tabindex="-1">getPropertyMetadata <a class="header-anchor" href="#getpropertymetadata" aria-hidden="true">#</a></h1><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#FFCB6B;">getPropertyMetadata</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  property: CompositeProperty</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  details: CompositeDetails</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  generateFor: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">selector</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">initializer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mutator</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> PropertyMetadata</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>This function will give Kanel the information it needs about a specific property in an interface. It is called when generating types for tables, views, materialized views and composite types, i.e. anything that has &quot;properties&quot;.</p><h2 id="property" tabindex="-1">property <a class="header-anchor" href="#property" aria-hidden="true">#</a></h2>`,4),o=[p];function r(l,c,i,y,d,D){return e(),s("div",null,o)}var _=a(n,[["render",r]]);export{F as __pageData,_ as default};
