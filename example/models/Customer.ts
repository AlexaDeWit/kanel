// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { AddressId } from './Address';

/** Identifier type for customer */
export type CustomerId = number & { __flavor?: 'CustomerId' };

/** Represents the table public.customer */
export default interface Customer {
  customer_id: CustomerId;

  store_id: number;

  first_name: string;

  last_name: string;

  email: string | null;

  address_id: AddressId;

  activebool: boolean;

  create_date: Date;

  last_update: Date | null;

  active: number | null;
}

/** Represents the initializer for the table public.customer */
export interface CustomerInitializer {
  /** Default value: nextval('customer_customer_id_seq'::regclass) */
  customer_id?: CustomerId;

  store_id: number;

  first_name: string;

  last_name: string;

  email?: string | null;

  address_id: AddressId;

  /** Default value: true */
  activebool?: boolean;

  /** Default value: ('now'::text)::date */
  create_date?: Date;

  /** Default value: now() */
  last_update?: Date | null;

  active?: number | null;
}

/** Represents the mutator for the table public.customer */
export interface CustomerMutator {
  customer_id?: CustomerId;

  store_id?: number;

  first_name?: string;

  last_name?: string;

  email?: string | null;

  address_id?: AddressId;

  activebool?: boolean;

  create_date?: Date;

  last_update?: Date | null;

  active?: number | null;
}
